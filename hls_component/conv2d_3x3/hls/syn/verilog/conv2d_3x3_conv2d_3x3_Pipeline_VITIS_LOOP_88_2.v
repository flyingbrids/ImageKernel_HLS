// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_TVALID,
        output_r_TREADY,
        window_0_2_loc_0,
        window_0_1_loc_0,
        window_1_2_loc_0,
        window_1_1_loc_0,
        window_2_2_loc_0,
        window_2_1_loc_0,
        input_r_TDATA,
        input_r_TREADY,
        output_r_TDATA,
        output_r_TVALID,
        cmp,
        icmp,
        cmp64,
        window_0_2_loc_2_out,
        window_0_2_loc_2_out_ap_vld,
        window_0_1_loc_2_out,
        window_0_1_loc_2_out_ap_vld,
        window_1_2_loc_2_out,
        window_1_2_loc_2_out_ap_vld,
        window_1_1_loc_2_out,
        window_1_1_loc_2_out_ap_vld,
        window_2_2_loc_2_out,
        window_2_2_loc_2_out_ap_vld,
        window_2_1_loc_2_out,
        window_2_1_loc_2_out_ap_vld,
        window_0_1,
        window_0_1_ap_vld,
        window_1_1,
        window_1_1_ap_vld,
        window_2_1,
        window_2_1_ap_vld,
        window_0_2,
        window_0_2_ap_vld,
        window_1_2,
        window_1_2_ap_vld,
        window_2_2,
        window_2_2_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   input_r_TVALID;
input   output_r_TREADY;
input  [9:0] window_0_2_loc_0;
input  [9:0] window_0_1_loc_0;
input  [9:0] window_1_2_loc_0;
input  [9:0] window_1_1_loc_0;
input  [9:0] window_2_2_loc_0;
input  [9:0] window_2_1_loc_0;
input  [15:0] input_r_TDATA;
output   input_r_TREADY;
output  [15:0] output_r_TDATA;
output   output_r_TVALID;
input  [0:0] cmp;
input  [0:0] icmp;
input  [0:0] cmp64;
output  [9:0] window_0_2_loc_2_out;
output   window_0_2_loc_2_out_ap_vld;
output  [9:0] window_0_1_loc_2_out;
output   window_0_1_loc_2_out_ap_vld;
output  [9:0] window_1_2_loc_2_out;
output   window_1_2_loc_2_out_ap_vld;
output  [9:0] window_1_1_loc_2_out;
output   window_1_1_loc_2_out_ap_vld;
output  [9:0] window_2_2_loc_2_out;
output   window_2_2_loc_2_out_ap_vld;
output  [9:0] window_2_1_loc_2_out;
output   window_2_1_loc_2_out_ap_vld;
output  [9:0] window_0_1;
output   window_0_1_ap_vld;
output  [9:0] window_1_1;
output   window_1_1_ap_vld;
output  [9:0] window_2_1;
output   window_2_1_ap_vld;
output  [9:0] window_0_2;
output   window_0_2_ap_vld;
output  [9:0] window_1_2;
output   window_1_2_ap_vld;
output  [9:0] window_2_2;
output   window_2_2_ap_vld;

reg ap_idle;
reg input_r_TREADY;
reg[15:0] output_r_TDATA;
reg output_r_TVALID;
reg window_0_2_loc_2_out_ap_vld;
reg window_0_1_loc_2_out_ap_vld;
reg window_1_2_loc_2_out_ap_vld;
reg window_1_1_loc_2_out_ap_vld;
reg window_2_2_loc_2_out_ap_vld;
reg window_2_1_loc_2_out_ap_vld;
reg window_0_1_ap_vld;
reg window_1_1_ap_vld;
reg window_2_1_ap_vld;
reg window_0_2_ap_vld;
reg window_1_2_ap_vld;
reg[9:0] window_2_2;
reg window_2_2_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_1_nbreadreq_fu_192_p3;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_1_reg_1075;
reg   [0:0] tmp_1_reg_1075_pp0_iter1_reg;
reg   [0:0] icmp_ln131_reg_1089;
reg   [0:0] icmp_ln131_reg_1089_pp0_iter1_reg;
reg    ap_predicate_op125_write_state3;
reg   [0:0] and_ln96_reg_1115;
reg   [0:0] and_ln96_reg_1115_pp0_iter1_reg;
reg   [0:0] and_ln111_reg_1119;
reg   [0:0] and_ln111_reg_1119_pp0_iter1_reg;
reg    ap_predicate_op166_write_state3;
reg    ap_predicate_op189_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln150_fu_439_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [11:0] linebuf_1_address0;
reg    linebuf_1_ce0;
reg    linebuf_1_we0;
wire   [9:0] linebuf_1_q0;
reg   [11:0] linebuf_2_address0;
reg    linebuf_2_ce0;
reg    linebuf_2_we0;
reg   [9:0] linebuf_2_d0;
wire   [9:0] linebuf_2_q0;
reg    input_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    output_r_TDATA_blk_n;
reg   [9:0] reg_330;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] reg_334;
wire   [0:0] cmp64_read_read_fu_138_p2;
reg   [11:0] linebuf_1_addr_1_reg_1079;
wire   [0:0] grp_fu_297_p2;
wire   [0:0] grp_fu_302_p2;
reg   [0:0] cmp81_reg_1093;
reg   [0:0] cmp81_reg_1093_pp0_iter1_reg;
wire   [9:0] d_fu_396_p1;
reg   [9:0] d_reg_1098;
reg   [9:0] d_reg_1098_pp0_iter1_reg;
reg   [11:0] linebuf_1_addr_reg_1105;
wire   [0:0] and_ln96_fu_413_p2;
wire   [0:0] and_ln111_fu_419_p2;
reg   [0:0] cmp38_reg_1123;
reg   [0:0] cmp38_reg_1123_pp0_iter1_reg;
wire   [0:0] icmp_ln105_fu_425_p2;
reg   [0:0] icmp_ln105_reg_1129;
reg   [0:0] icmp_ln105_reg_1129_pp0_iter1_reg;
reg   [0:0] icmp_ln150_reg_1134;
reg   [0:0] icmp_ln150_reg_1134_pp0_iter1_reg;
reg   [9:0] window_2_2_loc_1_load_1_reg_1138;
reg   [9:0] window_2_2_loc_1_load_3_reg_1143;
reg   [9:0] window_1_2_loc_1_load51_reg_1148;
wire   [63:0] idxprom_i_i_i78_fu_379_p1;
wire   [63:0] idxprom_i_i_i_fu_401_p1;
reg   [31:0] col_fu_110;
wire   [31:0] grp_fu_307_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_col_3;
reg   [31:0] ap_sig_allocacmp_col_6;
reg   [9:0] window_2_2_loc_1_fu_114;
wire   [9:0] window_2_2_loc_1_load_4_load_fu_501_p1;
reg   [9:0] window_2_1_loc_1_fu_118;
reg   [9:0] window_1_2_loc_1_fu_122;
wire   [9:0] window_1_2_loc_1_load_3_load_fu_504_p1;
reg   [9:0] window_1_1_loc_1_fu_126;
reg   [9:0] window_0_2_loc_1_fu_130;
wire   [9:0] window_0_2_loc_1_load43_load_fu_968_p1;
reg   [9:0] window_0_1_loc_1_fu_134;
wire   [15:0] zext_ln143_fu_655_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln122_fu_843_p1;
wire   [15:0] zext_ln108_fu_963_p1;
wire   [9:0] select_ln140_fu_538_p3;
wire   [10:0] zext_ln60_2_fu_557_p1;
wire   [10:0] window_1_2_loc_1_cast4_fu_553_p1;
wire   [10:0] tmp7_fu_561_p2;
wire   [11:0] tmp_4_fu_567_p3;
wire   [10:0] linebuf_1_load_1_cast_fu_549_p1;
wire   [10:0] zext_ln67_4_fu_545_p1;
wire   [10:0] sum_8_fu_579_p2;
wire  signed [12:0] sext_ln67_5_fu_585_p1;
wire  signed [12:0] sext_ln67_4_fu_575_p1;
wire  signed [12:0] sum_5_fu_589_p2;
wire  signed [31:0] sext_ln60_2_fu_595_p1;
wire   [2:0] tmp_10_fu_607_p4;
wire   [0:0] tmp_9_fu_599_p3;
wire   [0:0] xor_ln143_fu_627_p2;
wire   [0:0] icmp_ln72_2_fu_617_p2;
wire   [0:0] or_ln143_fu_641_p2;
wire   [9:0] select_ln143_1_fu_633_p3;
wire   [9:0] trunc_ln143_fu_623_p1;
wire   [9:0] select_ln143_fu_647_p3;
wire   [9:0] select_ln119_fu_682_p3;
wire   [9:0] select_ln119_1_fu_688_p3;
wire   [10:0] zext_ln67_2_fu_704_p1;
wire   [10:0] window_1_2_loc_1_cast2_fu_701_p1;
wire   [10:0] tmp4_fu_715_p2;
wire   [8:0] empty_fu_721_p1;
wire   [11:0] tmp_3_fu_725_p3;
wire   [10:0] linebuf_1_load_cast_fu_697_p1;
wire   [10:0] d_cast3_fu_712_p1;
wire   [10:0] add_ln67_fu_745_p2;
wire   [11:0] zext_ln67_3_fu_751_p1;
wire   [11:0] zext_ln67_1_fu_693_p1;
wire   [11:0] sub_ln67_1_fu_755_p2;
wire   [11:0] zext_ln60_1_fu_708_p1;
wire  signed [11:0] sum_7_fu_761_p2;
wire   [9:0] trunc_ln67_fu_767_p1;
wire   [9:0] tmp_3_cast_fu_733_p3;
wire  signed [12:0] sext_ln67_3_fu_771_p1;
wire  signed [12:0] sext_ln67_2_fu_741_p1;
wire  signed [12:0] sum_3_fu_781_p2;
wire  signed [31:0] sext_ln60_1_fu_787_p1;
wire   [2:0] tmp_8_fu_799_p4;
wire   [0:0] tmp_7_fu_791_p3;
wire   [0:0] xor_ln122_fu_815_p2;
wire   [0:0] icmp_ln72_1_fu_809_p2;
wire   [0:0] or_ln122_fu_829_p2;
wire   [9:0] select_ln122_1_fu_821_p3;
wire   [9:0] add_ln122_fu_775_p2;
wire   [9:0] select_ln122_fu_835_p3;
wire   [9:0] select_ln105_fu_848_p3;
wire   [10:0] zext_ln67_fu_858_p1;
wire   [10:0] window_1_2_loc_1_cast_fu_854_p1;
wire   [10:0] tmp_fu_869_p2;
wire   [11:0] tmp_2_fu_875_p3;
wire   [10:0] d_cast_fu_866_p1;
wire   [10:0] zext_ln60_fu_862_p1;
wire   [10:0] sum_6_fu_887_p2;
wire  signed [12:0] sext_ln67_1_fu_893_p1;
wire  signed [12:0] sext_ln67_fu_883_p1;
wire  signed [12:0] sum_fu_897_p2;
wire  signed [31:0] sext_ln60_fu_903_p1;
wire   [2:0] tmp_6_fu_915_p4;
wire   [0:0] tmp_5_fu_907_p3;
wire   [0:0] xor_ln108_fu_935_p2;
wire   [0:0] icmp_ln72_fu_925_p2;
wire   [0:0] or_ln108_fu_949_p2;
wire   [9:0] select_ln108_1_fu_941_p3;
wire   [9:0] trunc_ln108_fu_931_p1;
wire   [9:0] select_ln108_fu_955_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_263;
reg    ap_condition_160;
reg    ap_condition_731;
reg    ap_condition_735;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 col_fu_110 = 32'd0;
#0 window_2_2_loc_1_fu_114 = 10'd0;
#0 window_2_1_loc_1_fu_118 = 10'd0;
#0 window_1_2_loc_1_fu_122 = 10'd0;
#0 window_1_1_loc_1_fu_126 = 10'd0;
#0 window_0_2_loc_1_fu_130 = 10'd0;
#0 window_0_1_loc_1_fu_134 = 10'd0;
#0 ap_done_reg = 1'b0;
end

conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2_linebuf_1_RAM_AUTO_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 2448 ),
    .AddressWidth( 12 ))
linebuf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_1_address0),
    .ce0(linebuf_1_ce0),
    .we0(linebuf_1_we0),
    .d0(linebuf_2_q0),
    .q0(linebuf_1_q0)
);

conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2_linebuf_1_RAM_AUTO_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 2448 ),
    .AddressWidth( 12 ))
linebuf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_2_address0),
    .ce0(linebuf_2_ce0),
    .we0(linebuf_2_we0),
    .d0(linebuf_2_d0),
    .q0(linebuf_2_q0)
);

conv2d_3x3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (ap_start_int == 1'b1) & (cmp64_read_read_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        col_fu_110 <= grp_fu_307_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_fu_110 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            window_0_1_loc_1_fu_134 <= window_0_1_loc_0;
        end else if (((tmp_1_reg_1075_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            window_0_1_loc_1_fu_134 <= window_0_2_loc_1_load43_load_fu_968_p1;
        end else if ((1'b1 == ap_condition_731)) begin
            window_0_1_loc_1_fu_134 <= window_0_2_loc_1_fu_130;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_0_2_loc_1_fu_130 <= window_0_2_loc_0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        window_0_2_loc_1_fu_130 <= linebuf_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            window_1_1_loc_1_fu_126 <= window_1_1_loc_0;
        end else if (((tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            window_1_1_loc_1_fu_126 <= window_1_2_loc_1_load_3_load_fu_504_p1;
        end else if ((1'b1 == ap_condition_735)) begin
            window_1_1_loc_1_fu_126 <= window_1_2_loc_1_fu_122;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_1_2_loc_1_fu_122 <= window_1_2_loc_0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        window_1_2_loc_1_fu_122 <= linebuf_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            window_2_1_loc_1_fu_118 <= window_2_1_loc_0;
        end else if (((tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            window_2_1_loc_1_fu_118 <= window_2_2_loc_1_load_4_load_fu_501_p1;
        end else if ((1'b1 == ap_condition_735)) begin
            window_2_1_loc_1_fu_118 <= window_2_2_loc_1_fu_114;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            window_2_2_loc_1_fu_114 <= window_2_2_loc_0;
        end else if (((tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            window_2_2_loc_1_fu_114 <= d_reg_1098;
        end else if ((1'b1 == ap_condition_735)) begin
            window_2_2_loc_1_fu_114 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln111_reg_1119 <= and_ln111_fu_419_p2;
        and_ln111_reg_1119_pp0_iter1_reg <= and_ln111_reg_1119;
        and_ln96_reg_1115 <= and_ln96_fu_413_p2;
        and_ln96_reg_1115_pp0_iter1_reg <= and_ln96_reg_1115;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        cmp38_reg_1123_pp0_iter1_reg <= cmp38_reg_1123;
        cmp81_reg_1093_pp0_iter1_reg <= cmp81_reg_1093;
        d_reg_1098 <= d_fu_396_p1;
        d_reg_1098_pp0_iter1_reg <= d_reg_1098;
        icmp_ln105_reg_1129 <= icmp_ln105_fu_425_p2;
        icmp_ln105_reg_1129_pp0_iter1_reg <= icmp_ln105_reg_1129;
        icmp_ln131_reg_1089_pp0_iter1_reg <= icmp_ln131_reg_1089;
        icmp_ln150_reg_1134 <= icmp_ln150_fu_439_p2;
        icmp_ln150_reg_1134_pp0_iter1_reg <= icmp_ln150_reg_1134;
        linebuf_1_addr_1_reg_1079 <= idxprom_i_i_i78_fu_379_p1;
        linebuf_1_addr_reg_1105 <= idxprom_i_i_i_fu_401_p1;
        tmp_1_reg_1075 <= tmp_1_nbreadreq_fu_192_p3;
        tmp_1_reg_1075_pp0_iter1_reg <= tmp_1_reg_1075;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp38_reg_1123 <= grp_fu_302_p2;
        cmp81_reg_1093 <= grp_fu_302_p2;
        icmp_ln131_reg_1089 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_330 <= window_1_2_loc_1_fu_122;
        reg_334 <= linebuf_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        window_1_2_loc_1_load51_reg_1148 <= window_1_2_loc_1_fu_122;
        window_2_2_loc_1_load_1_reg_1138 <= window_2_2_loc_1_fu_114;
        window_2_2_loc_1_load_3_reg_1143 <= window_2_2_loc_1_fu_114;
    end
end

always @ (*) begin
    if (((icmp_ln150_fu_439_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_col_3 = col_fu_110;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (ap_start_int == 1'b1) & (cmp64_read_read_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_sig_allocacmp_col_6 = grp_fu_307_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_6 = 32'd0;
    end else begin
        ap_sig_allocacmp_col_6 = col_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_TDATA_blk_n = input_r_TVALID;
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_TREADY = 1'b1;
    end else begin
        input_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_263)) begin
        if ((tmp_1_reg_1075 == 1'd1)) begin
            linebuf_1_address0 = linebuf_1_addr_reg_1105;
        end else if (((cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0))) begin
            linebuf_1_address0 = linebuf_1_addr_1_reg_1079;
        end else begin
            linebuf_1_address0 = 'bx;
        end
    end else begin
        linebuf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        linebuf_1_ce0 = 1'b1;
    end else begin
        linebuf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        linebuf_1_we0 = 1'b1;
    end else begin
        linebuf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_160)) begin
        if ((tmp_1_nbreadreq_fu_192_p3 == 1'd1)) begin
            linebuf_2_address0 = idxprom_i_i_i_fu_401_p1;
        end else if (((tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (cmp64_read_read_fu_138_p2 == 1'd1))) begin
            linebuf_2_address0 = idxprom_i_i_i78_fu_379_p1;
        end else begin
            linebuf_2_address0 = 'bx;
        end
    end else begin
        linebuf_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (ap_start_int == 1'b1) & (cmp64_read_read_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        linebuf_2_ce0 = 1'b1;
    end else begin
        linebuf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_160)) begin
        if ((tmp_1_nbreadreq_fu_192_p3 == 1'd1)) begin
            linebuf_2_d0 = d_fu_396_p1;
        end else if (((tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (cmp64_read_read_fu_138_p2 == 1'd1))) begin
            linebuf_2_d0 = 10'd0;
        end else begin
            linebuf_2_d0 = 'bx;
        end
    end else begin
        linebuf_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (ap_start_int == 1'b1) & (cmp64_read_read_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        linebuf_2_we0 = 1'b1;
    end else begin
        linebuf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op189_write_state3 == 1'b1)) begin
            output_r_TDATA = zext_ln108_fu_963_p1;
        end else if ((ap_predicate_op166_write_state3 == 1'b1)) begin
            output_r_TDATA = zext_ln122_fu_843_p1;
        end else if ((ap_predicate_op125_write_state3 == 1'b1)) begin
            output_r_TDATA = zext_ln143_fu_655_p1;
        end else begin
            output_r_TDATA = 'bx;
        end
    end else begin
        output_r_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op189_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op166_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op125_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        output_r_TDATA_blk_n = output_r_TREADY;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op189_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op166_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op125_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        output_r_TVALID = 1'b1;
    end else begin
        output_r_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        window_0_1_ap_vld = 1'b1;
    end else begin
        window_0_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln150_reg_1134_pp0_iter1_reg == 1'd0))) begin
        window_0_1_loc_2_out_ap_vld = 1'b1;
    end else begin
        window_0_1_loc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        window_0_2_ap_vld = 1'b1;
    end else begin
        window_0_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln150_reg_1134_pp0_iter1_reg == 1'd0))) begin
        window_0_2_loc_2_out_ap_vld = 1'b1;
    end else begin
        window_0_2_loc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        window_1_1_ap_vld = 1'b1;
    end else begin
        window_1_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln150_reg_1134_pp0_iter1_reg == 1'd0))) begin
        window_1_1_loc_2_out_ap_vld = 1'b1;
    end else begin
        window_1_1_loc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        window_1_2_ap_vld = 1'b1;
    end else begin
        window_1_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln150_reg_1134_pp0_iter1_reg == 1'd0))) begin
        window_1_2_loc_2_out_ap_vld = 1'b1;
    end else begin
        window_1_2_loc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_reg_1075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        window_2_1_ap_vld = 1'b1;
    end else begin
        window_2_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln150_reg_1134_pp0_iter1_reg == 1'd0))) begin
        window_2_1_loc_2_out_ap_vld = 1'b1;
    end else begin
        window_2_1_loc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_160)) begin
        if ((tmp_1_nbreadreq_fu_192_p3 == 1'd1)) begin
            window_2_2 = d_fu_396_p1;
        end else if (((tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (cmp64_read_read_fu_138_p2 == 1'd1))) begin
            window_2_2 = 10'd0;
        end else begin
            window_2_2 = 'bx;
        end
    end else begin
        window_2_2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd0) & (ap_start_int == 1'b1) & (cmp64_read_read_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        window_2_2_ap_vld = 1'b1;
    end else begin
        window_2_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln150_reg_1134_pp0_iter1_reg == 1'd0))) begin
        window_2_2_loc_2_out_ap_vld = 1'b1;
    end else begin
        window_2_2_loc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln122_fu_775_p2 = (trunc_ln67_fu_767_p1 + tmp_3_cast_fu_733_p3);

assign add_ln67_fu_745_p2 = (linebuf_1_load_cast_fu_697_p1 + d_cast3_fu_712_p1);

assign and_ln111_fu_419_p2 = (icmp & grp_fu_297_p2);

assign and_ln96_fu_413_p2 = (grp_fu_297_p2 & cmp);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((tmp_1_nbreadreq_fu_192_p3 == 1'd1) & (input_r_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op189_write_state3 == 1'b1) & (output_r_TREADY == 1'b0)) | ((ap_predicate_op166_write_state3 == 1'b1) & (output_r_TREADY == 1'b0)) | ((ap_predicate_op125_write_state3 == 1'b1) & (output_r_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op189_write_state3 == 1'b1) & (output_r_TREADY == 1'b0)) | ((ap_predicate_op166_write_state3 == 1'b1) & (output_r_TREADY == 1'b0)) | ((ap_predicate_op125_write_state3 == 1'b1) & (output_r_TREADY == 1'b0)));
end

always @ (*) begin
    ap_condition_160 = ((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_263 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_731 = ((cmp64 == 1'd1) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_735 = ((cmp64 == 1'd1) & (tmp_1_reg_1075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op125_write_state3 = ((icmp_ln131_reg_1089_pp0_iter1_reg == 1'd1) & (cmp64 == 1'd1) & (tmp_1_reg_1075_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_write_state3 = ((tmp_1_reg_1075_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln96_reg_1115_pp0_iter1_reg) & (1'd1 == and_ln111_reg_1119_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op189_write_state3 = ((tmp_1_reg_1075_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln96_reg_1115_pp0_iter1_reg));
end

assign cmp64_read_read_fu_138_p2 = cmp64;

assign d_cast3_fu_712_p1 = d_reg_1098_pp0_iter1_reg;

assign d_cast_fu_866_p1 = d_reg_1098_pp0_iter1_reg;

assign d_fu_396_p1 = input_r_TDATA[9:0];

assign empty_fu_721_p1 = tmp4_fu_715_p2[8:0];

assign grp_fu_297_p2 = (($signed(ap_sig_allocacmp_col_3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_302_p2 = ((ap_sig_allocacmp_col_3 == 32'd1) ? 1'b1 : 1'b0);

assign grp_fu_307_p2 = (ap_sig_allocacmp_col_3 + 32'd1);

assign icmp_ln105_fu_425_p2 = ((ap_sig_allocacmp_col_3 != 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_439_p2 = (($signed(ap_sig_allocacmp_col_6) < $signed(32'd2448)) ? 1'b1 : 1'b0);

assign icmp_ln72_1_fu_809_p2 = (($signed(tmp_8_fu_799_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln72_2_fu_617_p2 = (($signed(tmp_10_fu_607_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_925_p2 = (($signed(tmp_6_fu_915_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign idxprom_i_i_i78_fu_379_p1 = ap_sig_allocacmp_col_3;

assign idxprom_i_i_i_fu_401_p1 = ap_sig_allocacmp_col_3;

assign linebuf_1_load_1_cast_fu_549_p1 = linebuf_1_q0;

assign linebuf_1_load_cast_fu_697_p1 = linebuf_1_q0;

assign or_ln108_fu_949_p2 = (tmp_5_fu_907_p3 | icmp_ln72_fu_925_p2);

assign or_ln122_fu_829_p2 = (tmp_7_fu_791_p3 | icmp_ln72_1_fu_809_p2);

assign or_ln143_fu_641_p2 = (tmp_9_fu_599_p3 | icmp_ln72_2_fu_617_p2);

assign select_ln105_fu_848_p3 = ((icmp_ln105_reg_1129_pp0_iter1_reg[0:0] == 1'b1) ? window_2_2_loc_1_load_1_reg_1138 : reg_330);

assign select_ln108_1_fu_941_p3 = ((xor_ln108_fu_935_p2[0:0] == 1'b1) ? 10'd1023 : 10'd0);

assign select_ln108_fu_955_p3 = ((or_ln108_fu_949_p2[0:0] == 1'b1) ? select_ln108_1_fu_941_p3 : trunc_ln108_fu_931_p1);

assign select_ln119_1_fu_688_p3 = ((cmp38_reg_1123_pp0_iter1_reg[0:0] == 1'b1) ? window_1_2_loc_1_load51_reg_1148 : window_2_2_loc_1_load_3_reg_1143);

assign select_ln119_fu_682_p3 = ((cmp38_reg_1123_pp0_iter1_reg[0:0] == 1'b1) ? window_1_2_loc_1_load51_reg_1148 : window_0_2_loc_1_fu_130);

assign select_ln122_1_fu_821_p3 = ((xor_ln122_fu_815_p2[0:0] == 1'b1) ? 10'd1023 : 10'd0);

assign select_ln122_fu_835_p3 = ((or_ln122_fu_829_p2[0:0] == 1'b1) ? select_ln122_1_fu_821_p3 : add_ln122_fu_775_p2);

assign select_ln140_fu_538_p3 = ((cmp81_reg_1093_pp0_iter1_reg[0:0] == 1'b1) ? reg_330 : window_0_2_loc_1_fu_130);

assign select_ln143_1_fu_633_p3 = ((xor_ln143_fu_627_p2[0:0] == 1'b1) ? 10'd1023 : 10'd0);

assign select_ln143_fu_647_p3 = ((or_ln143_fu_641_p2[0:0] == 1'b1) ? select_ln143_1_fu_633_p3 : trunc_ln143_fu_623_p1);

assign sext_ln60_1_fu_787_p1 = sum_3_fu_781_p2;

assign sext_ln60_2_fu_595_p1 = sum_5_fu_589_p2;

assign sext_ln60_fu_903_p1 = sum_fu_897_p2;

assign sext_ln67_1_fu_893_p1 = $signed(sum_6_fu_887_p2);

assign sext_ln67_2_fu_741_p1 = $signed(tmp_3_fu_725_p3);

assign sext_ln67_3_fu_771_p1 = sum_7_fu_761_p2;

assign sext_ln67_4_fu_575_p1 = $signed(tmp_4_fu_567_p3);

assign sext_ln67_5_fu_585_p1 = $signed(sum_8_fu_579_p2);

assign sext_ln67_fu_883_p1 = $signed(tmp_2_fu_875_p3);

assign sub_ln67_1_fu_755_p2 = (zext_ln67_3_fu_751_p1 - zext_ln67_1_fu_693_p1);

assign sum_3_fu_781_p2 = ($signed(sext_ln67_3_fu_771_p1) + $signed(sext_ln67_2_fu_741_p1));

assign sum_5_fu_589_p2 = ($signed(sext_ln67_5_fu_585_p1) + $signed(sext_ln67_4_fu_575_p1));

assign sum_6_fu_887_p2 = (d_cast_fu_866_p1 - zext_ln60_fu_862_p1);

assign sum_7_fu_761_p2 = (sub_ln67_1_fu_755_p2 - zext_ln60_1_fu_708_p1);

assign sum_8_fu_579_p2 = (linebuf_1_load_1_cast_fu_549_p1 - zext_ln67_4_fu_545_p1);

assign sum_fu_897_p2 = ($signed(sext_ln67_1_fu_893_p1) + $signed(sext_ln67_fu_883_p1));

assign tmp4_fu_715_p2 = (zext_ln67_2_fu_704_p1 - window_1_2_loc_1_cast2_fu_701_p1);

assign tmp7_fu_561_p2 = (zext_ln60_2_fu_557_p1 - window_1_2_loc_1_cast4_fu_553_p1);

assign tmp_10_fu_607_p4 = {{sum_5_fu_589_p2[12:10]}};

assign tmp_1_nbreadreq_fu_192_p3 = input_r_TVALID;

assign tmp_2_fu_875_p3 = {{tmp_fu_869_p2}, {1'd0}};

assign tmp_3_cast_fu_733_p3 = {{empty_fu_721_p1}, {1'd0}};

assign tmp_3_fu_725_p3 = {{tmp4_fu_715_p2}, {1'd0}};

assign tmp_4_fu_567_p3 = {{tmp7_fu_561_p2}, {1'd0}};

assign tmp_5_fu_907_p3 = sext_ln60_fu_903_p1[32'd31];

assign tmp_6_fu_915_p4 = {{sum_fu_897_p2[12:10]}};

assign tmp_7_fu_791_p3 = sext_ln60_1_fu_787_p1[32'd31];

assign tmp_8_fu_799_p4 = {{sum_3_fu_781_p2[12:10]}};

assign tmp_9_fu_599_p3 = sext_ln60_2_fu_595_p1[32'd31];

assign tmp_fu_869_p2 = (zext_ln67_fu_858_p1 - window_1_2_loc_1_cast_fu_854_p1);

assign trunc_ln108_fu_931_p1 = sum_fu_897_p2[9:0];

assign trunc_ln143_fu_623_p1 = sum_5_fu_589_p2[9:0];

assign trunc_ln67_fu_767_p1 = sum_7_fu_761_p2[9:0];

assign window_0_1 = window_0_2_loc_1_fu_130;

assign window_0_1_loc_2_out = window_0_1_loc_1_fu_134;

assign window_0_2 = linebuf_1_q0;

assign window_0_2_loc_1_load43_load_fu_968_p1 = window_0_2_loc_1_fu_130;

assign window_0_2_loc_2_out = window_0_2_loc_1_fu_130;

assign window_1_1 = window_1_2_loc_1_fu_122;

assign window_1_1_loc_2_out = window_1_1_loc_1_fu_126;

assign window_1_2 = linebuf_2_q0;

assign window_1_2_loc_1_cast2_fu_701_p1 = window_1_2_loc_1_load51_reg_1148;

assign window_1_2_loc_1_cast4_fu_553_p1 = reg_330;

assign window_1_2_loc_1_cast_fu_854_p1 = reg_330;

assign window_1_2_loc_1_load_3_load_fu_504_p1 = window_1_2_loc_1_fu_122;

assign window_1_2_loc_2_out = window_1_2_loc_1_fu_122;

assign window_2_1 = window_2_2_loc_1_fu_114;

assign window_2_1_loc_2_out = window_2_1_loc_1_fu_118;

assign window_2_2_loc_1_load_4_load_fu_501_p1 = window_2_2_loc_1_fu_114;

assign window_2_2_loc_2_out = window_2_2_loc_1_fu_114;

assign xor_ln108_fu_935_p2 = (tmp_5_fu_907_p3 ^ 1'd1);

assign xor_ln122_fu_815_p2 = (tmp_7_fu_791_p3 ^ 1'd1);

assign xor_ln143_fu_627_p2 = (tmp_9_fu_599_p3 ^ 1'd1);

assign zext_ln108_fu_963_p1 = select_ln108_fu_955_p3;

assign zext_ln122_fu_843_p1 = select_ln122_fu_835_p3;

assign zext_ln143_fu_655_p1 = select_ln143_fu_647_p3;

assign zext_ln60_1_fu_708_p1 = select_ln119_1_fu_688_p3;

assign zext_ln60_2_fu_557_p1 = reg_334;

assign zext_ln60_fu_862_p1 = select_ln105_fu_848_p3;

assign zext_ln67_1_fu_693_p1 = select_ln119_fu_682_p3;

assign zext_ln67_2_fu_704_p1 = reg_334;

assign zext_ln67_3_fu_751_p1 = add_ln67_fu_745_p2;

assign zext_ln67_4_fu_545_p1 = select_ln140_fu_538_p3;

assign zext_ln67_fu_858_p1 = reg_334;

endmodule //conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2
