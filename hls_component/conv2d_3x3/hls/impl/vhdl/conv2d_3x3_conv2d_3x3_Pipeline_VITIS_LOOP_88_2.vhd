-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_TVALID : IN STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC;
    window_0_2_loc_0 : IN STD_LOGIC_VECTOR (9 downto 0);
    window_0_1_loc_0 : IN STD_LOGIC_VECTOR (9 downto 0);
    window_1_2_loc_0 : IN STD_LOGIC_VECTOR (9 downto 0);
    window_1_1_loc_0 : IN STD_LOGIC_VECTOR (9 downto 0);
    window_2_2_loc_0 : IN STD_LOGIC_VECTOR (9 downto 0);
    window_2_1_loc_0 : IN STD_LOGIC_VECTOR (9 downto 0);
    input_r_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_TREADY : OUT STD_LOGIC;
    output_r_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    cmp : IN STD_LOGIC_VECTOR (0 downto 0);
    icmp : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp64 : IN STD_LOGIC_VECTOR (0 downto 0);
    window_0_2_loc_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_0_2_loc_2_out_ap_vld : OUT STD_LOGIC;
    window_0_1_loc_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_0_1_loc_2_out_ap_vld : OUT STD_LOGIC;
    window_1_2_loc_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_1_2_loc_2_out_ap_vld : OUT STD_LOGIC;
    window_1_1_loc_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_1_1_loc_2_out_ap_vld : OUT STD_LOGIC;
    window_2_2_loc_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_2_2_loc_2_out_ap_vld : OUT STD_LOGIC;
    window_2_1_loc_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_2_1_loc_2_out_ap_vld : OUT STD_LOGIC;
    window_0_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_0_1_ap_vld : OUT STD_LOGIC;
    window_1_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_1_1_ap_vld : OUT STD_LOGIC;
    window_2_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_2_1_ap_vld : OUT STD_LOGIC;
    window_0_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_0_2_ap_vld : OUT STD_LOGIC;
    window_1_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_1_2_ap_vld : OUT STD_LOGIC;
    window_2_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    window_2_2_ap_vld : OUT STD_LOGIC );
end;


architecture behav of conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_990 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100110010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_1_nbreadreq_fu_192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_1_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1075_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_reg_1089_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op125_write_state3 : BOOLEAN;
    signal and_ln96_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_reg_1115_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln111_reg_1119 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln111_reg_1119_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op166_write_state3 : BOOLEAN;
    signal ap_predicate_op189_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln150_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal linebuf_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_1_ce0 : STD_LOGIC;
    signal linebuf_1_we0 : STD_LOGIC;
    signal linebuf_1_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal linebuf_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_2_ce0 : STD_LOGIC;
    signal linebuf_2_we0 : STD_LOGIC;
    signal linebuf_2_d0 : STD_LOGIC_VECTOR (9 downto 0);
    signal linebuf_2_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal input_r_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal output_r_TDATA_blk_n : STD_LOGIC;
    signal reg_330 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_334 : STD_LOGIC_VECTOR (9 downto 0);
    signal cmp64_read_read_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal linebuf_1_addr_1_reg_1079 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp81_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp81_reg_1093_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d_fu_396_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal d_reg_1098 : STD_LOGIC_VECTOR (9 downto 0);
    signal d_reg_1098_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal linebuf_1_addr_reg_1105 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln96_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln111_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp38_reg_1123 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp38_reg_1123_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_1129_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln150_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln150_reg_1134_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal window_2_2_loc_1_load_1_reg_1138 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_2_2_loc_1_load_3_reg_1143 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_1_2_loc_1_load51_reg_1148 : STD_LOGIC_VECTOR (9 downto 0);
    signal idxprom_i_i_i78_fu_379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom_i_i_i_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_fu_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_col_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_loc_1_fu_114 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal window_2_2_loc_1_load_4_load_fu_501_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_2_1_loc_1_fu_118 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal window_1_2_loc_1_fu_122 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal window_1_2_loc_1_load_3_load_fu_504_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_1_1_loc_1_fu_126 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal window_0_2_loc_1_fu_130 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal window_0_2_loc_1_load43_load_fu_968_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_0_1_loc_1_fu_134 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal zext_ln143_fu_655_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln122_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln108_fu_963_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln140_fu_538_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_2_fu_557_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal window_1_2_loc_1_cast4_fu_553_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp7_fu_561_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_567_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_1_load_1_cast_fu_549_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln67_4_fu_545_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_8_fu_579_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln67_5_fu_585_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln67_4_fu_575_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sum_5_fu_589_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln60_2_fu_595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_607_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_599_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln143_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln72_2_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln143_1_fu_633_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln143_fu_623_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln143_fu_647_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln119_fu_682_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln119_1_fu_688_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln67_2_fu_704_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal window_1_2_loc_1_cast2_fu_701_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_fu_715_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_721_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_725_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_1_load_cast_fu_697_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal d_cast3_fu_712_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln67_fu_745_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln67_3_fu_751_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln67_1_fu_693_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln67_1_fu_755_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln60_1_fu_708_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_7_fu_761_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln67_fu_767_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_cast_fu_733_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln67_3_fu_771_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln67_2_fu_741_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sum_3_fu_781_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln60_1_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_799_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_791_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln122_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln72_1_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln122_1_fu_821_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln122_fu_775_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln122_fu_835_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln105_fu_848_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln67_fu_858_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal window_1_2_loc_1_cast_fu_854_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_869_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_875_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal d_cast_fu_866_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln60_fu_862_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_6_fu_887_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln67_1_fu_893_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln67_fu_883_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sum_fu_897_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln60_fu_903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_915_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln72_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln108_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln108_1_fu_941_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln108_fu_931_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln108_fu_955_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_263 : BOOLEAN;
    signal ap_condition_160 : BOOLEAN;
    signal ap_condition_731 : BOOLEAN;
    signal ap_condition_735 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2_linebuf_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (9 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component conv2d_3x3_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    linebuf_1_U : component conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2_linebuf_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 10,
        AddressRange => 2448,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_1_address0,
        ce0 => linebuf_1_ce0,
        we0 => linebuf_1_we0,
        d0 => linebuf_2_q0,
        q0 => linebuf_1_q0);

    linebuf_2_U : component conv2d_3x3_conv2d_3x3_Pipeline_VITIS_LOOP_88_2_linebuf_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 10,
        AddressRange => 2448,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => linebuf_2_address0,
        ce0 => linebuf_2_ce0,
        we0 => linebuf_2_we0,
        d0 => linebuf_2_d0,
        q0 => linebuf_2_q0);

    flow_control_loop_pipe_sequential_init_U : component conv2d_3x3_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    col_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                col_fu_110 <= grp_fu_307_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                col_fu_110 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    window_0_1_loc_1_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    window_0_1_loc_1_fu_134 <= window_0_1_loc_0;
                elsif (((tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    window_0_1_loc_1_fu_134 <= window_0_2_loc_1_load43_load_fu_968_p1;
                elsif ((ap_const_boolean_1 = ap_condition_731)) then 
                    window_0_1_loc_1_fu_134 <= window_0_2_loc_1_fu_130;
                end if;
            end if; 
        end if;
    end process;

    window_0_2_loc_1_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_0_2_loc_1_fu_130 <= window_0_2_loc_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
                window_0_2_loc_1_fu_130 <= linebuf_1_q0;
            end if; 
        end if;
    end process;

    window_1_1_loc_1_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    window_1_1_loc_1_fu_126 <= window_1_1_loc_0;
                elsif (((tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    window_1_1_loc_1_fu_126 <= window_1_2_loc_1_load_3_load_fu_504_p1;
                elsif ((ap_const_boolean_1 = ap_condition_735)) then 
                    window_1_1_loc_1_fu_126 <= window_1_2_loc_1_fu_122;
                end if;
            end if; 
        end if;
    end process;

    window_1_2_loc_1_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_1_2_loc_1_fu_122 <= window_1_2_loc_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                window_1_2_loc_1_fu_122 <= linebuf_2_q0;
            end if; 
        end if;
    end process;

    window_2_1_loc_1_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    window_2_1_loc_1_fu_118 <= window_2_1_loc_0;
                elsif (((tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    window_2_1_loc_1_fu_118 <= window_2_2_loc_1_load_4_load_fu_501_p1;
                elsif ((ap_const_boolean_1 = ap_condition_735)) then 
                    window_2_1_loc_1_fu_118 <= window_2_2_loc_1_fu_114;
                end if;
            end if; 
        end if;
    end process;

    window_2_2_loc_1_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    window_2_2_loc_1_fu_114 <= window_2_2_loc_0;
                elsif (((tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    window_2_2_loc_1_fu_114 <= d_reg_1098;
                elsif ((ap_const_boolean_1 = ap_condition_735)) then 
                    window_2_2_loc_1_fu_114 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln111_reg_1119 <= and_ln111_fu_419_p2;
                and_ln111_reg_1119_pp0_iter1_reg <= and_ln111_reg_1119;
                and_ln96_reg_1115 <= and_ln96_fu_413_p2;
                and_ln96_reg_1115_pp0_iter1_reg <= and_ln96_reg_1115;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                cmp38_reg_1123_pp0_iter1_reg <= cmp38_reg_1123;
                cmp81_reg_1093_pp0_iter1_reg <= cmp81_reg_1093;
                d_reg_1098 <= d_fu_396_p1;
                d_reg_1098_pp0_iter1_reg <= d_reg_1098;
                icmp_ln105_reg_1129 <= icmp_ln105_fu_425_p2;
                icmp_ln105_reg_1129_pp0_iter1_reg <= icmp_ln105_reg_1129;
                icmp_ln131_reg_1089_pp0_iter1_reg <= icmp_ln131_reg_1089;
                icmp_ln150_reg_1134 <= icmp_ln150_fu_439_p2;
                icmp_ln150_reg_1134_pp0_iter1_reg <= icmp_ln150_reg_1134;
                linebuf_1_addr_1_reg_1079 <= idxprom_i_i_i78_fu_379_p1(12 - 1 downto 0);
                linebuf_1_addr_reg_1105 <= idxprom_i_i_i_fu_401_p1(12 - 1 downto 0);
                tmp_1_reg_1075 <= tmp_1_nbreadreq_fu_192_p3;
                tmp_1_reg_1075_pp0_iter1_reg <= tmp_1_reg_1075;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cmp38_reg_1123 <= grp_fu_302_p2;
                cmp81_reg_1093 <= grp_fu_302_p2;
                icmp_ln131_reg_1089 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_330 <= window_1_2_loc_1_fu_122;
                reg_334 <= linebuf_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                window_1_2_loc_1_load51_reg_1148 <= window_1_2_loc_1_fu_122;
                window_2_2_loc_1_load_1_reg_1138 <= window_2_2_loc_1_fu_114;
                window_2_2_loc_1_load_3_reg_1143 <= window_2_2_loc_1_fu_114;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln122_fu_775_p2 <= std_logic_vector(unsigned(trunc_ln67_fu_767_p1) + unsigned(tmp_3_cast_fu_733_p3));
    add_ln67_fu_745_p2 <= std_logic_vector(unsigned(linebuf_1_load_cast_fu_697_p1) + unsigned(d_cast3_fu_712_p1));
    and_ln111_fu_419_p2 <= (icmp and grp_fu_297_p2);
    and_ln96_fu_413_p2 <= (grp_fu_297_p2 and cmp);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(input_r_TVALID, tmp_1_nbreadreq_fu_192_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (input_r_TVALID = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(output_r_TREADY, ap_predicate_op125_write_state3, ap_predicate_op166_write_state3, ap_predicate_op189_write_state3)
    begin
                ap_block_state3_io <= (((ap_predicate_op189_write_state3 = ap_const_boolean_1) and (output_r_TREADY = ap_const_logic_0)) or ((ap_predicate_op166_write_state3 = ap_const_boolean_1) and (output_r_TREADY = ap_const_logic_0)) or ((ap_predicate_op125_write_state3 = ap_const_boolean_1) and (output_r_TREADY = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(output_r_TREADY, ap_predicate_op125_write_state3, ap_predicate_op166_write_state3, ap_predicate_op189_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((ap_predicate_op189_write_state3 = ap_const_boolean_1) and (output_r_TREADY = ap_const_logic_0)) or ((ap_predicate_op166_write_state3 = ap_const_boolean_1) and (output_r_TREADY = ap_const_logic_0)) or ((ap_predicate_op125_write_state3 = ap_const_boolean_1) and (output_r_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_160_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_start_int)
    begin
                ap_condition_160 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_263_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_263 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_731_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_1_reg_1075_pp0_iter1_reg, cmp64)
    begin
                ap_condition_731 <= ((cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_735_assign_proc : process(ap_enable_reg_pp0_iter1, tmp_1_reg_1075, cmp64)
    begin
                ap_condition_735 <= ((cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln150_fu_439_p2, ap_start_int)
    begin
        if (((icmp_ln150_fu_439_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op125_write_state3_assign_proc : process(tmp_1_reg_1075_pp0_iter1_reg, icmp_ln131_reg_1089_pp0_iter1_reg, cmp64)
    begin
                ap_predicate_op125_write_state3 <= ((icmp_ln131_reg_1089_pp0_iter1_reg = ap_const_lv1_1) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op166_write_state3_assign_proc : process(tmp_1_reg_1075_pp0_iter1_reg, and_ln96_reg_1115_pp0_iter1_reg, and_ln111_reg_1119_pp0_iter1_reg)
    begin
                ap_predicate_op166_write_state3 <= ((tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln96_reg_1115_pp0_iter1_reg) and (ap_const_lv1_1 = and_ln111_reg_1119_pp0_iter1_reg));
    end process;


    ap_predicate_op189_write_state3_assign_proc : process(tmp_1_reg_1075_pp0_iter1_reg, and_ln96_reg_1115_pp0_iter1_reg)
    begin
                ap_predicate_op189_write_state3 <= ((tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln96_reg_1115_pp0_iter1_reg));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_fu_110, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_3 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_col_3 <= col_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_col_6_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_1_nbreadreq_fu_192_p3, ap_block_pp0_stage0, cmp64_read_read_fu_138_p2, col_fu_110, grp_fu_307_p2, ap_loop_init, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_sig_allocacmp_col_6 <= grp_fu_307_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_6 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_col_6 <= col_fu_110;
        end if; 
    end process;

    cmp64_read_read_fu_138_p2 <= cmp64;
    d_cast3_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_reg_1098_pp0_iter1_reg),11));
    d_cast_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_reg_1098_pp0_iter1_reg),11));
    d_fu_396_p1 <= input_r_TDATA(10 - 1 downto 0);
    empty_fu_721_p1 <= tmp4_fu_715_p2(9 - 1 downto 0);
    grp_fu_297_p2 <= "1" when (signed(ap_sig_allocacmp_col_3) > signed(ap_const_lv32_0)) else "0";
    grp_fu_302_p2 <= "1" when (ap_sig_allocacmp_col_3 = ap_const_lv32_1) else "0";
    grp_fu_307_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_3) + unsigned(ap_const_lv32_1));
    icmp_ln105_fu_425_p2 <= "0" when (ap_sig_allocacmp_col_3 = ap_const_lv32_1) else "1";
    icmp_ln150_fu_439_p2 <= "1" when (signed(ap_sig_allocacmp_col_6) < signed(ap_const_lv32_990)) else "0";
    icmp_ln72_1_fu_809_p2 <= "1" when (signed(tmp_8_fu_799_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln72_2_fu_617_p2 <= "1" when (signed(tmp_10_fu_607_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln72_fu_925_p2 <= "1" when (signed(tmp_6_fu_915_p4) > signed(ap_const_lv3_0)) else "0";
    idxprom_i_i_i78_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_col_3),64));
    idxprom_i_i_i_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_col_3),64));

    input_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, input_r_TVALID, tmp_1_nbreadreq_fu_192_p3, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_TDATA_blk_n <= input_r_TVALID;
        else 
            input_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_r_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_1_nbreadreq_fu_192_p3, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_TREADY <= ap_const_logic_1;
        else 
            input_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_1_address0_assign_proc : process(tmp_1_reg_1075, cmp64, linebuf_1_addr_1_reg_1079, linebuf_1_addr_reg_1105, ap_condition_263)
    begin
        if ((ap_const_boolean_1 = ap_condition_263)) then
            if ((tmp_1_reg_1075 = ap_const_lv1_1)) then 
                linebuf_1_address0 <= linebuf_1_addr_reg_1105;
            elsif (((cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0))) then 
                linebuf_1_address0 <= linebuf_1_addr_1_reg_1079;
            else 
                linebuf_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            linebuf_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    linebuf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1075, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            linebuf_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_1_load_1_cast_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(linebuf_1_q0),11));
    linebuf_1_load_cast_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(linebuf_1_q0),11));

    linebuf_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1075, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            linebuf_1_we0 <= ap_const_logic_1;
        else 
            linebuf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_2_address0_assign_proc : process(tmp_1_nbreadreq_fu_192_p3, cmp64_read_read_fu_138_p2, idxprom_i_i_i78_fu_379_p1, idxprom_i_i_i_fu_401_p1, ap_condition_160)
    begin
        if ((ap_const_boolean_1 = ap_condition_160)) then
            if ((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1)) then 
                linebuf_2_address0 <= idxprom_i_i_i_fu_401_p1(12 - 1 downto 0);
            elsif (((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1))) then 
                linebuf_2_address0 <= idxprom_i_i_i78_fu_379_p1(12 - 1 downto 0);
            else 
                linebuf_2_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            linebuf_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    linebuf_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_1_nbreadreq_fu_192_p3, ap_block_pp0_stage0_11001, cmp64_read_read_fu_138_p2, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            linebuf_2_ce0 <= ap_const_logic_1;
        else 
            linebuf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_2_d0_assign_proc : process(tmp_1_nbreadreq_fu_192_p3, cmp64_read_read_fu_138_p2, d_fu_396_p1, ap_condition_160)
    begin
        if ((ap_const_boolean_1 = ap_condition_160)) then
            if ((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1)) then 
                linebuf_2_d0 <= d_fu_396_p1;
            elsif (((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1))) then 
                linebuf_2_d0 <= ap_const_lv10_0;
            else 
                linebuf_2_d0 <= "XXXXXXXXXX";
            end if;
        else 
            linebuf_2_d0 <= "XXXXXXXXXX";
        end if; 
    end process;


    linebuf_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_1_nbreadreq_fu_192_p3, ap_block_pp0_stage0_11001, cmp64_read_read_fu_138_p2, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            linebuf_2_we0 <= ap_const_logic_1;
        else 
            linebuf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln108_fu_949_p2 <= (tmp_5_fu_907_p3 or icmp_ln72_fu_925_p2);
    or_ln122_fu_829_p2 <= (tmp_7_fu_791_p3 or icmp_ln72_1_fu_809_p2);
    or_ln143_fu_641_p2 <= (tmp_9_fu_599_p3 or icmp_ln72_2_fu_617_p2);

    output_r_TDATA_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op125_write_state3, ap_predicate_op166_write_state3, ap_predicate_op189_write_state3, zext_ln143_fu_655_p1, ap_block_pp0_stage0_01001, zext_ln122_fu_843_p1, zext_ln108_fu_963_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op189_write_state3 = ap_const_boolean_1)) then 
                output_r_TDATA <= zext_ln108_fu_963_p1;
            elsif ((ap_predicate_op166_write_state3 = ap_const_boolean_1)) then 
                output_r_TDATA <= zext_ln122_fu_843_p1;
            elsif ((ap_predicate_op125_write_state3 = ap_const_boolean_1)) then 
                output_r_TDATA <= zext_ln143_fu_655_p1;
            else 
                output_r_TDATA <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            output_r_TDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, output_r_TREADY, ap_predicate_op125_write_state3, ap_predicate_op166_write_state3, ap_predicate_op189_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op189_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op166_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op125_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            output_r_TDATA_blk_n <= output_r_TREADY;
        else 
            output_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    output_r_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op125_write_state3, ap_predicate_op166_write_state3, ap_predicate_op189_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op189_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op166_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op125_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            output_r_TVALID <= ap_const_logic_1;
        else 
            output_r_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    select_ln105_fu_848_p3 <= 
        window_2_2_loc_1_load_1_reg_1138 when (icmp_ln105_reg_1129_pp0_iter1_reg(0) = '1') else 
        reg_330;
    select_ln108_1_fu_941_p3 <= 
        ap_const_lv10_3FF when (xor_ln108_fu_935_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln108_fu_955_p3 <= 
        select_ln108_1_fu_941_p3 when (or_ln108_fu_949_p2(0) = '1') else 
        trunc_ln108_fu_931_p1;
    select_ln119_1_fu_688_p3 <= 
        window_1_2_loc_1_load51_reg_1148 when (cmp38_reg_1123_pp0_iter1_reg(0) = '1') else 
        window_2_2_loc_1_load_3_reg_1143;
    select_ln119_fu_682_p3 <= 
        window_1_2_loc_1_load51_reg_1148 when (cmp38_reg_1123_pp0_iter1_reg(0) = '1') else 
        window_0_2_loc_1_fu_130;
    select_ln122_1_fu_821_p3 <= 
        ap_const_lv10_3FF when (xor_ln122_fu_815_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln122_fu_835_p3 <= 
        select_ln122_1_fu_821_p3 when (or_ln122_fu_829_p2(0) = '1') else 
        add_ln122_fu_775_p2;
    select_ln140_fu_538_p3 <= 
        reg_330 when (cmp81_reg_1093_pp0_iter1_reg(0) = '1') else 
        window_0_2_loc_1_fu_130;
    select_ln143_1_fu_633_p3 <= 
        ap_const_lv10_3FF when (xor_ln143_fu_627_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln143_fu_647_p3 <= 
        select_ln143_1_fu_633_p3 when (or_ln143_fu_641_p2(0) = '1') else 
        trunc_ln143_fu_623_p1;
        sext_ln60_1_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_3_fu_781_p2),32));

        sext_ln60_2_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_5_fu_589_p2),32));

        sext_ln60_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_fu_897_p2),32));

        sext_ln67_1_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_6_fu_887_p2),13));

        sext_ln67_2_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_725_p3),13));

        sext_ln67_3_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_7_fu_761_p2),13));

        sext_ln67_4_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_567_p3),13));

        sext_ln67_5_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_8_fu_579_p2),13));

        sext_ln67_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_875_p3),13));

    sub_ln67_1_fu_755_p2 <= std_logic_vector(unsigned(zext_ln67_3_fu_751_p1) - unsigned(zext_ln67_1_fu_693_p1));
    sum_3_fu_781_p2 <= std_logic_vector(signed(sext_ln67_3_fu_771_p1) + signed(sext_ln67_2_fu_741_p1));
    sum_5_fu_589_p2 <= std_logic_vector(signed(sext_ln67_5_fu_585_p1) + signed(sext_ln67_4_fu_575_p1));
    sum_6_fu_887_p2 <= std_logic_vector(unsigned(d_cast_fu_866_p1) - unsigned(zext_ln60_fu_862_p1));
    sum_7_fu_761_p2 <= std_logic_vector(unsigned(sub_ln67_1_fu_755_p2) - unsigned(zext_ln60_1_fu_708_p1));
    sum_8_fu_579_p2 <= std_logic_vector(unsigned(linebuf_1_load_1_cast_fu_549_p1) - unsigned(zext_ln67_4_fu_545_p1));
    sum_fu_897_p2 <= std_logic_vector(signed(sext_ln67_1_fu_893_p1) + signed(sext_ln67_fu_883_p1));
    tmp4_fu_715_p2 <= std_logic_vector(unsigned(zext_ln67_2_fu_704_p1) - unsigned(window_1_2_loc_1_cast2_fu_701_p1));
    tmp7_fu_561_p2 <= std_logic_vector(unsigned(zext_ln60_2_fu_557_p1) - unsigned(window_1_2_loc_1_cast4_fu_553_p1));
    tmp_10_fu_607_p4 <= sum_5_fu_589_p2(12 downto 10);
    tmp_1_nbreadreq_fu_192_p3 <= (0=>(input_r_TVALID), others=>'-');
    tmp_2_fu_875_p3 <= (tmp_fu_869_p2 & ap_const_lv1_0);
    tmp_3_cast_fu_733_p3 <= (empty_fu_721_p1 & ap_const_lv1_0);
    tmp_3_fu_725_p3 <= (tmp4_fu_715_p2 & ap_const_lv1_0);
    tmp_4_fu_567_p3 <= (tmp7_fu_561_p2 & ap_const_lv1_0);
    tmp_5_fu_907_p3 <= sext_ln60_fu_903_p1(31 downto 31);
    tmp_6_fu_915_p4 <= sum_fu_897_p2(12 downto 10);
    tmp_7_fu_791_p3 <= sext_ln60_1_fu_787_p1(31 downto 31);
    tmp_8_fu_799_p4 <= sum_3_fu_781_p2(12 downto 10);
    tmp_9_fu_599_p3 <= sext_ln60_2_fu_595_p1(31 downto 31);
    tmp_fu_869_p2 <= std_logic_vector(unsigned(zext_ln67_fu_858_p1) - unsigned(window_1_2_loc_1_cast_fu_854_p1));
    trunc_ln108_fu_931_p1 <= sum_fu_897_p2(10 - 1 downto 0);
    trunc_ln143_fu_623_p1 <= sum_5_fu_589_p2(10 - 1 downto 0);
    trunc_ln67_fu_767_p1 <= sum_7_fu_761_p2(10 - 1 downto 0);
    window_0_1 <= window_0_2_loc_1_fu_130;

    window_0_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_1_reg_1075_pp0_iter1_reg, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            window_0_1_ap_vld <= ap_const_logic_1;
        else 
            window_0_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_0_1_loc_2_out <= window_0_1_loc_1_fu_134;

    window_0_1_loc_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln150_reg_1134_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_reg_1134_pp0_iter1_reg = ap_const_lv1_0))) then 
            window_0_1_loc_2_out_ap_vld <= ap_const_logic_1;
        else 
            window_0_1_loc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_0_2 <= linebuf_1_q0;

    window_0_2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_1_reg_1075_pp0_iter1_reg, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            window_0_2_ap_vld <= ap_const_logic_1;
        else 
            window_0_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_0_2_loc_1_load43_load_fu_968_p1 <= window_0_2_loc_1_fu_130;
    window_0_2_loc_2_out <= window_0_2_loc_1_fu_130;

    window_0_2_loc_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln150_reg_1134_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_reg_1134_pp0_iter1_reg = ap_const_lv1_0))) then 
            window_0_2_loc_2_out_ap_vld <= ap_const_logic_1;
        else 
            window_0_2_loc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_1_1 <= window_1_2_loc_1_fu_122;

    window_1_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1075, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            window_1_1_ap_vld <= ap_const_logic_1;
        else 
            window_1_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_1_1_loc_2_out <= window_1_1_loc_1_fu_126;

    window_1_1_loc_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln150_reg_1134_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_reg_1134_pp0_iter1_reg = ap_const_lv1_0))) then 
            window_1_1_loc_2_out_ap_vld <= ap_const_logic_1;
        else 
            window_1_1_loc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_1_2 <= linebuf_2_q0;

    window_1_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1075, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            window_1_2_ap_vld <= ap_const_logic_1;
        else 
            window_1_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_1_2_loc_1_cast2_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_1_2_loc_1_load51_reg_1148),11));
    window_1_2_loc_1_cast4_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_330),11));
    window_1_2_loc_1_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_330),11));
    window_1_2_loc_1_load_3_load_fu_504_p1 <= window_1_2_loc_1_fu_122;
    window_1_2_loc_2_out <= window_1_2_loc_1_fu_122;

    window_1_2_loc_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln150_reg_1134_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_reg_1134_pp0_iter1_reg = ap_const_lv1_0))) then 
            window_1_2_loc_2_out_ap_vld <= ap_const_logic_1;
        else 
            window_1_2_loc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_2_1 <= window_2_2_loc_1_fu_114;

    window_2_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1075, cmp64, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp64 = ap_const_lv1_1) and (tmp_1_reg_1075 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_reg_1075 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            window_2_1_ap_vld <= ap_const_logic_1;
        else 
            window_2_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_2_1_loc_2_out <= window_2_1_loc_1_fu_118;

    window_2_1_loc_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln150_reg_1134_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_reg_1134_pp0_iter1_reg = ap_const_lv1_0))) then 
            window_2_1_loc_2_out_ap_vld <= ap_const_logic_1;
        else 
            window_2_1_loc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    window_2_2_assign_proc : process(tmp_1_nbreadreq_fu_192_p3, cmp64_read_read_fu_138_p2, d_fu_396_p1, ap_condition_160)
    begin
        if ((ap_const_boolean_1 = ap_condition_160)) then
            if ((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1)) then 
                window_2_2 <= d_fu_396_p1;
            elsif (((tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1))) then 
                window_2_2 <= ap_const_lv10_0;
            else 
                window_2_2 <= "XXXXXXXXXX";
            end if;
        else 
            window_2_2 <= "XXXXXXXXXX";
        end if; 
    end process;


    window_2_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_1_nbreadreq_fu_192_p3, ap_block_pp0_stage0_11001, cmp64_read_read_fu_138_p2, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (cmp64_read_read_fu_138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1_nbreadreq_fu_192_p3 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            window_2_2_ap_vld <= ap_const_logic_1;
        else 
            window_2_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    window_2_2_loc_1_load_4_load_fu_501_p1 <= window_2_2_loc_1_fu_114;
    window_2_2_loc_2_out <= window_2_2_loc_1_fu_114;

    window_2_2_loc_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln150_reg_1134_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln150_reg_1134_pp0_iter1_reg = ap_const_lv1_0))) then 
            window_2_2_loc_2_out_ap_vld <= ap_const_logic_1;
        else 
            window_2_2_loc_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln108_fu_935_p2 <= (tmp_5_fu_907_p3 xor ap_const_lv1_1);
    xor_ln122_fu_815_p2 <= (tmp_7_fu_791_p3 xor ap_const_lv1_1);
    xor_ln143_fu_627_p2 <= (tmp_9_fu_599_p3 xor ap_const_lv1_1);
    zext_ln108_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln108_fu_955_p3),16));
    zext_ln122_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln122_fu_835_p3),16));
    zext_ln143_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln143_fu_647_p3),16));
    zext_ln60_1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln119_1_fu_688_p3),12));
    zext_ln60_2_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_334),11));
    zext_ln60_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln105_fu_848_p3),11));
    zext_ln67_1_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln119_fu_682_p3),12));
    zext_ln67_2_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_334),11));
    zext_ln67_3_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln67_fu_745_p2),12));
    zext_ln67_4_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln140_fu_538_p3),11));
    zext_ln67_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_334),11));
end behav;
